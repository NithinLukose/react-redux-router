{"version":3,"sources":["reducers/posts.js","actions/index.js","reducers/post.js","reducers/index.js","store/configureStore.js","components/post.js","components/button.js","containers/pagination.js","components/loading.js","components/postList.js","containers/visiblePosts.js","components/particularPost.js","containers/particularPost.js","components/simple.js","components/homeButton.js","containers/home.js","App.js","index.js"],"names":["posts","state","isFetching","items","postsPerPage","currentPage","totalPage","action","newPage","type","Math","ceil","length","post","id","title","body","comments","combineReducers","configureStore","createStore","rootReducer","applyMiddleware","thunk","Post","className","to","Button","name","onClick","classname","connect","ownProps","class","dispatch","Loading","PostList","map","key","indexOfLastPost","indexOfFirstPost","slice","PostLists","ParticularPost","comment","email","Simple","useParams","useDispatch","useEffect","a","fetch","then","res","json","res1","res2","fetchParticularPost","HomeButton","App","exact","path","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5471c468.chunk.js","sourcesContent":["import {REQUEST_POSTS,RECEIVE_POSTS,PREVIOUS_PAGE,NEXT_PAGE,SET_TO_FIRST_PAGE } from '../actions'\r\n\r\nconst posts = (state={\r\n    isFetching: false,\r\n    items:[],\r\n    postsPerPage:10,\r\n    currentPage:1,\r\n    totalPage:1\r\n},action) => {\r\n    \r\n    let newPage = 0;\r\n    switch(action.type){\r\n        case REQUEST_POSTS:\r\n            return {...state,isFetching:true}\r\n        case RECEIVE_POSTS:\r\n            return {...state,isFetching:false,items:action.posts,totalPage:Math.ceil(action.posts.length/state.postsPerPage)}\r\n\r\n        case PREVIOUS_PAGE:\r\n            newPage = state.currentPage!==1?state.currentPage-1:state.currentPage\r\n            return {...state,currentPage:newPage}\r\n        \r\n        case NEXT_PAGE:\r\n            newPage = state.currentPage!==state.totalPage?state.currentPage+1:state.currentPage\r\n            return {...state,currentPage:newPage}\r\n        case SET_TO_FIRST_PAGE:\r\n            return {...state,currentPage:1}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default posts","import fetch from 'cross-fetch'\r\n\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const REQUEST_PARTICULAR_POST = 'REQUEST_PARTICULAR_POST'\r\nexport const RECEIVE_PARTICULAR_POST =  'RECEIVE_PARTICULAR_POST'\r\nexport const REQUEST_PARTICULAR_POST_COMMENT = 'REQUEST_PARTICULAR_POST_COMMENT'\r\nexport const RECEIVE_PARTICULAR_POST_COMMENT = 'RECEIVE_PARTICULAR_POST_COMMENT'\r\nexport const PREVIOUS_PAGE = 'PREVIOUS_PAGE'\r\nexport const NEXT_PAGE = 'NEXT_PAGE'\r\nexport const SET_TO_FIRST_PAGE = 'SET_TO_FIRST_PAGE'\r\n\r\nconst requestPosts = () => ({\r\n    type: REQUEST_POSTS,\r\n})\r\n\r\nconst receivePosts = (json) => ({\r\n    type: RECEIVE_POSTS,\r\n    posts:json\r\n})\r\n\r\nconst requestParticularPost = () => ({\r\n    type: REQUEST_PARTICULAR_POST\r\n})\r\n\r\nconst receiveParticularPost = (json) => ({\r\n    type: RECEIVE_PARTICULAR_POST,\r\n    post: json\r\n})\r\n\r\n\r\nexport const fetchPosts = () => {\r\n    \r\n    return async dispatch => {\r\n\r\n        dispatch(requestPosts())\r\n        let res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res=>res.json())\r\n\r\n        dispatch(receivePosts(res))\r\n    \r\n\r\n    }\r\n}\r\n\r\nexport const fetchParticularPost = (id) => {\r\n    \r\n    return async dispatch => {\r\n        dispatch(requestParticularPost())\r\n        let res1 = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n        .then(res=>res.json())\r\n        //console.log(res1)\r\n        let res2 = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n        .then(res=>res.json())\r\n        //console.log(res2.length)\r\n        let res = {...res1,comments:res2}\r\n        //console.log(res)\r\n        dispatch(receiveParticularPost(res))       \r\n    }\r\n}\r\n\r\nexport const previousPage = () => ({\r\n    type: PREVIOUS_PAGE\r\n})\r\n\r\nexport const nextPage = () => ({\r\n    type: NEXT_PAGE\r\n})\r\n\r\nexport const setToFirstPage = () => ({\r\n    type: SET_TO_FIRST_PAGE\r\n})\r\n","import {\r\n    REQUEST_PARTICULAR_POST,\r\n    RECEIVE_PARTICULAR_POST,\r\n} from '../actions'\r\n\r\nconst post = (state={\r\n    id:0,\r\n    title:'',\r\n    body:'',\r\n    comments:[],\r\n    isFetching:false\r\n},action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case REQUEST_PARTICULAR_POST:\r\n            return {...state,isFetching:true}\r\n        \r\n        case RECEIVE_PARTICULAR_POST:\r\n            return {\r\n                ...state,\r\n                id:action.post.id,\r\n                title:action.post.title,\r\n                body:action.post.body,\r\n                comments:action.post.comments,\r\n                isFetching:false\r\n            }\r\n        default : \r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default post","import {combineReducers} from 'redux'\r\nimport posts from './posts'\r\nimport post from './post'\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    post\r\n})\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from '../reducers'\r\nconst configureStore = ()=> (createStore(rootReducer,applyMiddleware(thunk)))\r\n\r\nexport default configureStore","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Post = ({id,title,body}) => {\r\n\r\n    return (\r\n\r\n        <div className='post'>\r\n\r\n            <Link to={`/posts/${id}`} className=\"postLink\"><h3>{title}</h3></Link>\r\n            <p>{body}</p>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Post","import React from 'react' \r\n\r\nconst Button = ({name,onClick,classname}) => {\r\n    return(\r\n        <div className={classname}>\r\n            <button onClick={onClick}>{name}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import {connect} from 'react-redux'\r\nimport {previousPage,nextPage} from '../actions'\r\nimport Button from '../components/button'\r\n\r\n\r\nconst mapStateToProps = (state,ownProps) => ({\r\n    \r\n    name:ownProps.name,\r\n    classname:ownProps.class\r\n})\r\n\r\nconst mapDispatchToprops = (dispatch,ownProps) => ({\r\n    onClick: ownProps.name === 'Previous'? ()=>dispatch(previousPage()):()=>dispatch(nextPage())\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToprops)(Button)","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return(\r\n        \r\n        <div className=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading","import React from 'react'\r\nimport Post from \"./post\";\r\nimport Pagination from '../containers/pagination'\r\nimport Loading from './loading'\r\nconst PostList = ({posts,isFetching,currentPage}) => {\r\n\r\n    \r\n    if(isFetching){\r\n        return(\r\n            <Loading />\r\n        )\r\n    }\r\n    return(\r\n\r\n        <>\r\n            <div className=\"pagination\">\r\n                <Pagination class=\"previous\" name=\"Previous\"/> \r\n                \r\n                <Pagination class=\"next\" name=\"Next\"/>\r\n            </div>\r\n            <div className=\"posts\">\r\n                \r\n                \r\n                {posts.map(post=><Post key={post.id} id={post.id} title={post.title} body={post.body} />)}\r\n                \r\n                \r\n            </div>\r\n            <div className=\"pagination\">\r\n                <Pagination class=\"previous\" name=\"Previous\"/> \r\n                \r\n                <Pagination class=\"next\" name=\"Next\"/>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PostList","import {connect} from 'react-redux'\r\nimport PostLists from '../components/postList'\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state.posts.items)\r\n    const indexOfLastPost = state.posts.currentPage*state.posts.postsPerPage\r\n    const indexOfFirstPost = indexOfLastPost - state.posts.postsPerPage\r\n    const currentPosts = state.posts.items.slice(indexOfFirstPost,indexOfLastPost)\r\n    \r\n    return {\r\n        posts:currentPosts,\r\n        isFetching:state.posts.isFetching,\r\n        currentPage:state.posts.currentPage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostLists)","import React from 'react'\r\nimport Loading from './loading'\r\n\r\n\r\nconst ParticularPost = ({post}) => {\r\n    \r\n    \r\n    if(post.isFetching){\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    let comments = []\r\n    if(post.comments.length>0){\r\n        comments = post.comments\r\n        //console.log(comments)\r\n    }\r\n    return(\r\n        <div className=\"particularPost\">\r\n\r\n            <div className=\"post\">\r\n                <h1>{post.title}</h1>\r\n                <p>{post.body}</p>\r\n                \r\n                <div className=\"comments\">\r\n                    <h4>comments</h4>\r\n                    {comments.length>0&&comments.map(comment=><div key={comment.id} className=\"comment\">\r\n\r\n                        <h5>{comment.email}</h5>\r\n                        <p>{comment.body}</p>\r\n\r\n                    </div>)}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n} \r\n\r\nexport default ParticularPost","\r\nimport {connect} from 'react-redux'\r\n\r\nimport ParticularPost from '../components/particularPost'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post:state.post\r\n})\r\nexport default connect(mapStateToProps)(ParticularPost)","import React, { useEffect } from 'react'\r\nimport ParticularPost from '../containers/particularPost'\r\nimport {fetchParticularPost} from '../actions'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Simple = () => {\r\n\r\n    let id = useParams().id\r\n    //console.log(id)\r\n    let dispatch = useDispatch()\r\n    useEffect(()=>{\r\n\r\n        dispatch(fetchParticularPost(id))\r\n\r\n    },[dispatch,id]) \r\n    return (\r\n        <ParticularPost />\r\n\r\n    )   \r\n\r\n}\r\n\r\nexport default Simple","import React from 'react'\r\n\r\nconst HomeButton = ({onClick}) => {\r\n\r\n    return(\r\n        <div className=\"topnav\">\r\n          <button onClick={onClick}>Home</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeButton","import {connect} from 'react-redux'\r\nimport {setToFirstPage} from '../actions'\r\nimport HomeButton from '../components/homeButton'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    onClick: () => dispatch(setToFirstPage())\r\n\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(HomeButton)\r\n","import React,{useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\r\nimport {fetchPosts} from './actions'\r\nimport VisiblePosts from './containers/visiblePosts'\r\nimport './App.css';\r\nimport Simple from './components/simple'\r\nimport Home from './containers/home'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(()=>{\r\n    dispatch(fetchPosts())\r\n  },[dispatch])\r\n\r\n\r\n  return(\r\n    <Router>\r\n      \r\n      <Link to = '/'>\r\n        <Home />\r\n      </Link>\r\n      <Switch>\r\n        \r\n        \r\n        <Route exact path=\"/\">\r\n          <VisiblePosts />\r\n\r\n        </Route>\r\n        <Route path={`/posts/:id`}>\r\n          <Simple />\r\n        </Route>\r\n      </Switch>\r\n      \r\n    </Router>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore'\nimport './index.css';\nimport App from './App';\n\nconst store = configureStore()\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}